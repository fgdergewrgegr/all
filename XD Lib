local xdl = {}
print("XD Lib")
-- xdl["_____"] = game:GetService("_____")
	xdl["w"] = game:GetService("Workspace")
	xdl["rs"] = game:GetService("ReplicatedStorage")
	xdl["rf"] = game:GetService("ReplicatedFirst")
	xdl["p"] = game:GetService("Players")
	xdl["uis"] = game:GetService("UserInputService")
	xdl["sg"] = game:GetService("StarterGui")
	xdl["hs"] = game:GetService("HttpService")
	xdl["r"] = game:GetService("RunService")
	xdl["sg"] = game:GetService("StarterGui")
	xdl["d"] = game:GetService("Debris")

-- xdl["_____"] = xdl._____.
	xdl["me"] = xdl.p.LocalPlayer
	xdl["m"] = xdl.me:GetMouse()
	xdl["name"] = xdl.me.Name
	xdl["dname"] = xdl.me.DisplayName

-- xdl["_____"] = function() end
	xdl["ffc"] = function(parent, name) return parent:FindFirstChild(name) end
	xdl["ffct"] = function(parent, names) for i,name in names do local obj = xdl.ffc(parent, name); if obj then parent = obj end end return unpack(names) end

	xdl["wfc"] = function(parent, name) while not(xdl.ffc(parent, name)) do task.wait() end; return parent[name] end
	xdl["wfct"] = function(parent, names) for i,name in names do names[i] = xdl.wfc(name) end; return unpack(names) end

	xdl["char"] = function() return xdl.me.Character or (xdl.me.CharacterAdded:Wait() and xdl.me.Character) end
	xdl["gcc"] = function(name) return xdl.ffc(xdl.char(), name) or xdl.wfc(xdl.char(), name) end

	xdl["hrp"] = function() return xdl.ggc("HumanoidRootPart") end
	xdl["hum"] = function() return xdl.ggc("Humanoid") end
	xdl["hd"] = function() return xdl.ggc("Head") end

	xdl["all"] = function() return xdl.hrp(), xdl.hum(), xdl.hd() end

	xdl["difp"] = function(obj) if obj and obj.Parent then return obj end end
	xdl["tah"] = function() return xdl.m.Target, xdl.m.Hit end
	xdl["mg"] = function(pos1, pos2) return (pos1 - pos2).Magnitude end

return xdl
